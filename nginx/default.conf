log_format custom_json escape=json
    '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"request_time":"$request_time"'
    '}';

# upstream nextjs_upstream {
#   server frontend:3000;
# }

# upstream django_upstream {
#   server backend:8000;
# }

# proxy_cache_path /var/cache/nginx keys_zone=NginxCache:20m levels=1:2 max_size=10g inactive=60m;

server {
    listen 80;

    server_name _;
    # We also turn off server tokens so that the NGINX version
    # doesnâ€™t appear in the response headers.
    server_tokens off;
    client_max_body_size 20M;

    access_log /var/log/nginx/access.log custom_json;
    error_log /var/log/nginx/error.log debug;
    #error_log /var/log/nginx/error.log.info info;
    #error_log /var/log/nginx/error.log.crit crit;
    #error_log /var/log/nginx/error.log.warn warn;
    #error_log /var/log/nginx/error.log.error error;
    #error_log /var/log/nginx/error.log.alert alert;
    #error_log /var/log/nginx/error.log.notice notice;
    #error_log /var/log/nginx/error.log.emerg emerg;

    location / {
        proxy_pass http://frontend:3000;
    }

    #-------------------------------------------------

    location /backend/api {
        try_files $uri @proxy_api;
    }

    location /django_static/ {
        alias /app/staticfiles;
    }

    location /django_media/ {
        alias /app/mediafiles;
    }

    # Cherchons a definer une variable pour /admin car cela doit etre secret
    # et ne doit pas etre push sur github
    location /secret {
        try_files $uri @proxy_api;
    }

    location /backend/api/docs/ {
        try_files $uri @proxy_api;
    }

    location @proxy_api {
        proxy_pass   http://django:8000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        #proxy_cache NginxCache;
        #add_header X-Proxy-Cache $upstream_cache_status;
        #proxy_cache_valid 200 10m;
        #proxy_ignore_headers Vary;
        #proxy_cache_bypass $cookie_sessionid;
        # proxy_cache_valid 400 5m;
        # proxy_cache_methods GET;
        # proxy_cache_min_uses 5;
        # proxy_cache_lock on;
        # proxy_cache_bypass $http_cache_bypass;
        # proxy_cache_bypass $cookie_nocache $arg_nocache;

    }

}